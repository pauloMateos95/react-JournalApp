{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","icon","text","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","useSelector","state","ui","msgError","loading","formValues","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","allowOutsideClick","showCancelButton","showConfirmButton","willOpen","showLoading","fileUrl","close","startUpLoading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2f108261.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAn3hJ_HPuibKIgN8Sd20uG9CD7ZL6F9k0\",\n    authDomain: \"react-app-curso-1e0cf.firebaseapp.com\",\n    databaseURL: \"https://react-app-curso-1e0cf.firebaseio.com\",\n    projectId: \"react-app-curso-1e0cf\",\n    storageBucket: \"react-app-curso-1e0cf.appspot.com\",\n    messagingSenderId: \"283919371841\",\n    appId: \"1:283919371841:web:f1b5e0ac998116bdb480c0\"\n};\n  \n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}","\n\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start Loading',\n    uiFinishLoading: '[UI] Finish Loading',\n\n    notesAddNew: '[Notes] New Note',\n    notesActive: '[Notes] Set Active Note',\n    notesLoad: '[Notes] Load Notes',\n    notesUpdated: '[Notes] Update Note',\n    notesFileUrl: '[Notes] Update Image Url',\n    notesDelete: '[Notes] Delete Note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n\n\n}","\n\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/daom2cbab/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n        \n        const resp = await fetch ( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (err) {\n        throw err;\n    }\n\n}","import { db } from \"../firebase/firebase-config\"\n\n\n\n\nexport const loadNotes = async ( uid ) => {\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n    const notes =[];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n\n    return notes;\n}","import Swal from 'sweetalert2';\n\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\n\n\n\nexport const startNewNote = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime(),\n        }\n\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\n\n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n\n    }\n}\n\nexport const activeNote =  ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\nexport const startLoadingNotes = ( uid ) => {\n    return async ( dispatch ) => {\n\n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n\n    }\n}\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = ( note ) => {\n    return async ( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if (!note.url) {\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch( refreshNote( note.id, noteToFirestore ) );\n        Swal.fire('Saved', note.title, 'success');\n\n    }\n}\n\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUpLoading = ( file ) => {\n    return async ( dispatch, getState ) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please Wait',\n            allowOutsideClick: false,\n            showCancelButton: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        activeNote.url = fileUrl;\n\n        dispatch( startSaveNote( activeNote ) );\n\n        Swal.close();\n\n    }\n}\n\nexport const startDeleting = ( id ) => {\n    return async ( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        dispatch( deleteNote( id ) );\n\n    }\n}\n\nexport const deleteNote = ( id ) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});","import { types } from \"../types/types\"\n\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});","import Swal from 'sweetalert2'\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\nimport { types } from \"../types/types\"\nimport { noteLogout } from './notes'\nimport { finishLoading, startLoading } from './ui'\n\nexport const startLoginEmailPassword = (email, password) => {\n    return ( dispatch ) => {\n\n        dispatch( startLoading() );\n\n        firebase.auth().signInWithEmailAndPassword( email, password ).then( ({ user }) => {\n\n            dispatch( login( user.uid, user.displayName ) );\n\n            dispatch( finishLoading() );\n\n        }).catch( e => {\n            dispatch( finishLoading() );\n            Swal.fire({\n                icon: 'error',\n                title: 'Fail',\n                text: e.message\n            });\n        })\n\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\n    return ( dispatch ) => {\n\n        firebase.auth().createUserWithEmailAndPassword( email, password ).then( async({ user }) => {\n\n            await user.updateProfile({ displayName: name });\n\n            dispatch( login( user.uid, user.displayName ) )\n\n        }).catch( e => {\n            dispatch( finishLoading() );\n            Swal.fire({\n                icon: 'error',\n                title: 'Fail',\n                text: e.message\n            });\n        })\n\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider ).then( ({ user }) => {\n            dispatch( login( user.uid, user.displayName ) )\n        });\n\n    }\n}\n\n\n\n\nexport const login = (uid, displayName) => {\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n}\n\nexport const startLogout = () => {\n    return async ( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( noteLogout() );\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: types.logout\n    }\n}\n","import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport validator from 'validator';\nimport { removeError, setError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError, loading } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        \n        if ( isFormValid() ) {\n            dispatch( startLoginEmailPassword( email, password ) );\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        if ( !validator.isEmail( email ) ) {\n            dispatch( setError('Must be a valid email') );\n            return false;\n        } else if ( password.length === 0 ) {\n            dispatch( setError('Password is required') );\n            return false;\n        } \n\n\n        dispatch( removeError() );\n        return true;\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n                onSubmit={ handleLogin }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError }\n                        </div>\n                    )\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n                \n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        \n        if ( isFormValid() ) {\n            dispatch ( startRegisterWithEmailPasswordName( email, password, name ) );\n        }\n    }\n\n    const isFormValid = () => {\n\n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') );\n            return false;\n        } else if ( !validator.isEmail( email ) ) {\n            dispatch( setError('Email is required') );\n            return false;\n        } else if ( password !== password2 ) {\n            dispatch( setError('Passwords should match') );\n            return false;\n        } else if ( password.length < 5 ) {\n            dispatch( setError('Password must be at least 6 characters long') );\n            return false;\n        }\n\n\n        dispatch( removeError() );\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form \n                onSubmit={ handleRegister }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError }\n                        </div>\n                    )\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const dispatch = useDispatch();\n    const noteDate = moment(date);\n\n    const handleEntryClick = () => {\n        dispatch(\n            activeNote( id, {\n                date, title, body, url\n            })\n        );\n    }\n\n    return (\n        <div \n        className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n        onClick={ handleEntryClick }\n        >\n            \n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n            <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('Do') }</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes);\n\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry\n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n\n        dispatch( startLogout() );\n\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name } </span>\n                </h3>\n\n                <button \n                className=\"btn mt-5\"\n                onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUpLoading } from '../../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes);\n\n    const handleSave = () => {\n\n        dispatch ( startSaveNote( active ) );\n\n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n\n        const file = e.target.files[0];\n\n        if (file) {\n            dispatch( startUpLoading( file ) );\n        }\n\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureClick }\n                >\n                    Picture\n                </button>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n    const { active:note } = useSelector(state => state.notes);\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title, id } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        \n        if (note.id !== activeId.current) {\n            reset( note );\n            activeId.current = note.id\n        }\n\n    }, [note, reset])\n\n    useEffect(() => {\n        \n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ) );\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    name=\"body\"\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                >\n\n                </textarea>\n\n                {\n                    (note.url) &&\n                    (\n                    <div className=\"notes__image\">\n                        <img \n                            src={ note.url }\n                            alt=\"imagen\"\n                        />\n                    </div>\n                    )\n                }\n\n\n            </div>\n\n            <button \n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                or create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n            \n            <Sidebar />\n\n\n            <main>\n\n                {\n                    ( active ) ? ( <NoteScreen /> ) : (<NothingSelected />)\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : ( <Redirect to='/auth/login' /> )\n            )}\n        \n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to='/' /> )\n                    : (<Component { ...props } />)\n            )}\n        \n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport firebase from 'firebase/app';\nimport Swal from 'sweetalert2';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( async (user) => {\n\n            if (user?.uid) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn(true);\n\n                dispatch( startLoadingNotes( user.uid ) );\n\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n\n        });\n\n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n    if ( checking ) {\n        Swal.fire({\n            title: 'Loading...',\n            text: 'Please Wait',\n            allowOutsideClick: false,\n            showCancelButton: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n    }\n\n    if (!checking) {\n        Swal.close();\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        isAuthenticated={ isLoggedIn }\n                        component={ AuthRouter }\n                    />\n\n                    <PrivateRoute \n                        exact\n                        path=\"/\"\n                        isAuthenticated={ isLoggedIn }\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n\n\nconst initialState = {\n    notes: [],\n    active: null,\n}\n\nexport const notesReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [ action.payload, ...state.notes ]\n            }\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            }\n\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id ? action.payload.note : note\n                )\n            }\n        \n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: [],\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        \n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n        \n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n        \n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n    \n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer,\n})\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n    );","import { types } from \"../types/types\";\n\n\n\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        \n        case types.logout:\n            return { }\n        \n        default:\n            return state;\n    }\n\n}\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}